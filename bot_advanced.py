import requests
import time
import json
import os
import gspread
from datetime import datetime, timedelta
from google.oauth2.service_account import Credentials

# –í–∞—à —Ç–æ–∫–µ–Ω
BOT_TOKEN = "8246985665:AAGpHgRVwU3t8vHGwE1bfRxrGGgeJWwyAKA"
API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏)
SPREADSHEET_ID = "https://docs.google.com/spreadsheets/d/1B_u7XNX-tWurpxrHgQdJuFWWTwP3KW8kX7_VyuQzJwY/edit?gid=394578358#gid=394578358"  # ID –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã
SHEET_NAME = "–õ–∏—Å—Ç1"  # –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞

# –§–∞–π–ª—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
USER_DATA_FILE = "user_data.json"

class GoogleSheetsManager:
    def __init__(self):
        self.worksheet = None
        self.setup_google_sheets()
        
    def setup_google_sheets(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"""
        try:
            creds_file = "credentials/service_account_key.json"
            if not os.path.exists(creds_file):
                print("‚ùå –§–∞–π–ª —Å credentials –Ω–µ –Ω–∞–π–¥–µ–Ω")
                print("üìç –ü–æ–ª–æ–∂–∏—Ç–µ service_account_key.json –≤ –ø–∞–ø–∫—É credentials/")
                return
                
            scopes = ["https://www.googleapis.com/auth/spreadsheets"]
            creds = Credentials.from_service_account_file(creds_file, scopes=scopes)
            gc = gspread.authorize(creds)
            self.worksheet = gc.open_by_key(SPREADSHEET_ID).worksheet(SHEET_NAME)
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")

    def get_todays_orders(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞–∫–∞–∑—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
        if not self.worksheet:
            return []
            
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
            all_data = self.worksheet.get_all_values()
            
            orders = []
            for row in all_data[1:]:  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                if len(row) > 0 and row[0].strip():  # –µ—Å–ª–∏ –µ—Å—Ç—å –§–ò–û
                    order = {
                        'fio': row[0].strip(),
                        'dishes': [],
                        'has_order': False
                    }
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª—é–¥–∞ (–∫–æ–ª–æ–Ω–∫–∏ 1-5)
                    dishes = []
                    for i in range(1, 6):
                        if len(row) > i and row[i].strip():
                            dishes.append(row[i].strip())
                    
                    if dishes:
                        order['dishes'] = dishes
                        order['has_order'] = True
                        order['price'] = row[7] if len(row) > 7 and row[7].strip() else "0"
                    
                    orders.append(order)
                    
            return orders
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è Google Sheets: {e}")
            return []

def load_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        if os.path.exists(USER_DATA_FILE):
            with open(USER_DATA_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
    except:
        pass
    return {}

def save_data(data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ"""
    try:
        with open(USER_DATA_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, indent=4, ensure_ascii=False)
    except:
        pass

def send_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    url = f"{API_URL}/sendMessage"
    data = {"chat_id": chat_id, "text": text}
    try:
        requests.post(url, data=data, timeout=10)
    except:
        pass

def get_updates(offset=None):
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    url = f"{API_URL}/getUpdates"
    params = {"timeout": 100, "offset": offset}
    try:
        response = requests.get(url, params=params, timeout=110)
        return response.json()
    except:
        return {"ok": False, "result": []}

def check_orders_and_notify(gs_manager, user_data):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–∫–∞–∑—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    try:
        orders = gs_manager.get_todays_orders()
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
        
        notified_users = set()
        
        for order in orders:
            if order['has_order']:
                # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –§–ò–û
                for user_id, user_info in user_data.items():
                    if (user_info.get('registered') and 
                        user_info.get('fio') and 
                        user_info['fio'].lower() == order['fio'].lower()):
                        
                        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ
                        message = "üçΩÔ∏è *–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*\n\n"
                        for dish in order['dishes']:
                            message += f"‚Ä¢ {dish}\n"
                        
                        message += f"\nüíµ –°—É–º–º–∞: {order['price']} —Ä—É–±.\n"
                        message += "üí≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –¥–æ 14:00"
                        
                        send_message(user_id, message)
                        notified_users.add(user_id)
                        print(f"üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {order['fio']}")
                        break
        
        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã: {len(notified_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
                        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")

def main():
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å Google Sheets!")
    print("üìä –û—Ç–ø—Ä–∞–≤—å—Ç–µ /checkorders –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–æ–≤")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets
    gs_manager = GoogleSheetsManager()
    
    user_data = load_data()
    offset = None
    last_check = time.time()
    
    try:
        while True:
            current_time = time.time()
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
            if current_time - last_check > 300:  # 5 –º–∏–Ω—É—Ç
                check_orders_and_notify(gs_manager, user_data)
                last_check = current_time
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            updates = get_updates(offset)
            
            if updates.get("ok"):
                for update in updates["result"]:
                    if "message" in update:
                        message = update["message"]
                        chat_id = str(message["chat"]["id"])
                        text = message.get("text", "").strip()
                        user = message["from"]
                        
                        user_id = str(user["id"])
                        
                        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                        if user_id not in user_data:
                            user_data[user_id] = {
                                "first_name": user.get("first_name", ""),
                                "username": user.get("username", ""),
                                "registered": False,
                                "fio": "",
                                "step": "start"
                            }
                        
                        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                        if text == "/start":
                            send_message(chat_id, 
                                "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ–± –æ–ø–ª–∞—Ç–µ –æ–±–µ–¥–æ–≤!\n\n"
                                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /register —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
                            )
                            user_data[user_id]["step"] = "start"
                            
                        elif text == "/register":
                            user_data[user_id]["registered"] = True
                            user_data[user_id]["step"] = "waiting_fio"
                            send_message(chat_id, 
                                "‚úÖ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n"
                                "üìù –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –§–ò–û —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ –∑–∞–∫–∞–∑–æ–≤\n"
                                "–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                            )
                            
                        elif text == "/myinfo":
                            info = user_data[user_id]
                            response = (
                                f"üë§ –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
                                f"‚Ä¢ ID: {user_id}\n"
                                f"‚Ä¢ –ò–º—è: {info['first_name']}\n"
                                f"‚Ä¢ –§–ò–û: {info.get('fio', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                                f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {'–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω' if info['registered'] else '–Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω'}"
                            )
                            send_message(chat_id, response)
                            
                        elif text == "/checkorders":
                            orders = gs_manager.get_todays_orders()
                            active_orders = sum(1 for order in orders if order['has_order'])
                            send_message(chat_id, f"üìä –°–µ–≥–æ–¥–Ω—è—à–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤: {active_orders}/{len(orders)}")
                            
                        elif user_data[user_id].get("step") == "waiting_fio":
                            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –§–ò–û –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                            user_data[user_id]["fio"] = text
                            user_data[user_id]["step"] = "completed"
                            send_message(chat_id, f"‚úÖ –§–ò–û —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {text}")
                            
                        else:
                            send_message(chat_id, 
                                "ü§ñ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                                "/start - –Ω–∞—á–∞—Ç—å\n"
                                "/register - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n"  
                                "/myinfo - –º–æ–∏ –¥–∞–Ω–Ω—ã–µ\n"
                                "/checkorders - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–∫–∞–∑—ã"
                            )
                        
                        offset = update["update_id"] + 1
                        save_data(user_data)
            
            time.sleep(1)
            
    except KeyboardInterrupt:
        print("‚èπÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()